/**
 *
 * @file SYSCTL_Enum.h
 * @copyright
 * @verbatim InDeviceMex 2021 @endverbatim
 *
 * @par Responsibility
 * @verbatim InDeviceMex Developers @endverbatim
 *
 * @version
 * @verbatim 1.0 @endverbatim
 *
 * @date
 * @verbatim 9 ene. 2023 @endverbatim
 *
 * @author
 * @verbatim InDeviceMex @endverbatim
 *
 * @par Change History
 * @verbatim
 * Date           Author     Version     Description
 * 9 ene. 2023     InDeviceMex    1.0         initial Version@endverbatim
 */

#ifndef XDRIVER_MCU_SYSCTL_PERIPHERAL_HEADER_SYSCTL_ENUM_H_
#define XDRIVER_MCU_SYSCTL_PERIPHERAL_HEADER_SYSCTL_ENUM_H_

#include <xDriver_MCU/MCU/xHeader/MCU_Enum.h>

typedef enum
{
    SYSCTL_enERROR_OK = (UBase_t) MCU_enERROR_OK,
    SYSCTL_enERROR_POINTER = (UBase_t) MCU_enERROR_POINTER,
    SYSCTL_enERROR_VALUE = (UBase_t) MCU_enERROR_VALUE,
    SYSCTL_enERROR_RANGE = (UBase_t) MCU_enERROR_RANGE,
    SYSCTL_enERROR_EMPTY = (UBase_t) MCU_enERROR_EMPTY,
    SYSCTL_enERROR_UNDEF = (UBase_t) MCU_enERROR_UNDEF,
}SYSCTL_nERROR;

typedef enum
{
    SYSCTL_enSTATE_DIS = (UBase_t) MCU_enSTATE_DIS,
    SYSCTL_enSTATE_ENA = (UBase_t) MCU_enSTATE_ENA,
    SYSCTL_enSTATE_UNDEF = (UBase_t) MCU_enSTATE_UNDEF,
} SYSCTL_nSTATE;

typedef enum
{
    SYSCTL_enSTATUS_INACTIVE = (UBase_t) MCU_enSTATUS_INACTIVE,
    SYSCTL_enSTATUS_ACTIVE = (UBase_t) MCU_enSTATUS_ACTIVE,
    SYSCTL_enSTATUS_UNDEF = (UBase_t) MCU_enSTATUS_UNDEF,
} SYSCTL_nSTATUS;

typedef enum
{
    SYSCTL_enFALSE = (UBase_t) FALSE,
    SYSCTL_enTRUE = (UBase_t) TRUE,
    SYSCTL_enPENDSTATE_UNDEF = UNDEF_VALUE,
}SYSCTL_nBOOLEAN;

typedef enum
{
    SYSCTL_enMODULE_0 = 0U,
    SYSCTL_enMODULE_MAX = 1U,
    SYSCTL_enMODULE_UNDEF = UNDEF_VALUE,
}SYSCTL_nMODULE;

typedef enum
{
    SYSCTL_enVECTOR_FLASH = 0U,
    SYSCTL_enVECTOR_RAM = 1U,
    SYSCTL_enVECTOR_UNDEF = UNDEF_VALUE,
}SYSCTL_nVECTOR;

typedef enum
{
    /*BOR*/
    SYSCTL_enINT_RESET_BROWNOUT = 0U,
    SYSCTL_enINT_RESET_NMI = 1U,
    SYSCTL_enINT_RESET_BOR_SW = 2U,
    SYSCTL_enINT_RESET_WAKEUP = 3U,
    SYSCTL_enINT_RESET_SECURITY = 4U,

    /*POR*/
    SYSCTL_enINT_RESET_SVS_LOW = 5U,
    SYSCTL_enINT_RESET_SVS_HIGH = 6U,
    SYSCTL_enINT_RESET_SVM_LOW = 7U,
    SYSCTL_enINT_RESET_SVM_HIGH = 8U,
    SYSCTL_enINT_RESET_POR_SW = 9U,

    /*PUC*/
    SYSCTL_enINT_RESET_WDT_TIMEOUT = 10U,
    SYSCTL_enINT_RESET_WDT_PASSWORD = 11U,
    SYSCTL_enINT_RESET_FLASH_PASSWORD = 12U,
    SYSCTL_enINT_RESET_FETCH = 13U,
    SYSCTL_enINT_RESET_PMM_PASSWORD = 14U,

    SYSCTL_enINT_RESET_MAX = 15U,
    SYSCTL_enINT_RESET_UNDEF = UNDEF_VALUE,
}SYSCTL_nINT_RESET;

typedef enum
{
    /*BOR*/
    SYSCTL_enINTMASK_RESET_BROWNOUT = 2U,
    SYSCTL_enINTMASK_RESET_NMI = 4U,
    SYSCTL_enINTMASK_RESET_BOR_SW = 6U,
    SYSCTL_enINTMASK_RESET_WAKEUP = 8U,
    SYSCTL_enINTMASK_RESET_SECURITY = 0xAU,

    /*POR*/
    SYSCTL_enINTMASK_RESET_SVS_LOW = 0xCU,
    SYSCTL_enINTMASK_RESET_SVS_HIGH = 0xEU,
    SYSCTL_enINTMASK_RESET_SVM_LOW = 0x10U,
    SYSCTL_enINTMASK_RESET_SVM_HIGH = 0x12U,
    SYSCTL_enINTMASK_RESET_POR_SW = 0x14U,

    /*PUC*/
    SYSCTL_enINTMASK_RESET_WDT_TIMEOUT = 0x16U,
    SYSCTL_enINTMASK_RESET_WDT_PASSWORD = 0x18U,
    SYSCTL_enINTMASK_RESET_FLASH_PASSWORD = 0x1AU,
    SYSCTL_enINTMASK_RESET_FETCH = 0x1EU,
    SYSCTL_enINTMASK_RESET_PMM_PASSWORD = 0x20U,

    SYSCTL_enINTMASK_RESET_ALL = 0x2FU,
    SYSCTL_enINTMASK_RESET_MAX = 0x30U,
    SYSCTL_enINTMASK_RESET_UNDEF = UNDEF_VALUE,
}SYSCTL_nINTMASK_RESET;

typedef enum
{
    SYSCTL_enINT_SYSNMI_SVM_LOW = 0U,
    SYSCTL_enINT_SYSNMI_SVM_HIGH = 1U,
    SYSCTL_enINT_SYSNMI_SVSM_LOW_DELAY = 2U,
    SYSCTL_enINT_SYSNMI_SVSM_HIGH_DELAY = 3U,
    SYSCTL_enINT_SYSNMI_VMA = 4U,
    SYSCTL_enINT_SYSNMI_JMB_IN = 5U,
    SYSCTL_enINT_SYSNMI_JMB_OUT = 6U,
    SYSCTL_enINT_SYSNMI_SVM_LOW_LEVEL = 7U,
    SYSCTL_enINT_SYSNMI_SVM_HIGH_LEVEL = 8U,

    SYSCTL_enINT_SYSNMI_MAX = 9U,
    SYSCTL_enINT_SYSNMI_UNDEF = UNDEF_VALUE,
}SYSCTL_nINT_SYSNMI;

typedef enum
{
    SYSCTL_enINTMASK_SYSNMI_SVM_LOW = 0x2U,
    SYSCTL_enINTMASK_SYSNMI_SVM_HIGH = 0x4U,
    SYSCTL_enINTMASK_SYSNMI_SVSM_LOW_DELAY = 0x6U,
    SYSCTL_enINTMASK_SYSNMI_SVSM_HIGH_DELAY = 0x8U,
    SYSCTL_enINTMASK_SYSNMI_VMA = 0xAU,
    SYSCTL_enINTMASK_SYSNMI_JMB_IN = 0xCU,
    SYSCTL_enINTMASK_SYSNMI_JMB_OUT = 0xEU,
    SYSCTL_enINTMASK_SYSNMI_SVM_LOW_LEVEL = 0x10U,
    SYSCTL_enINTMASK_SYSNMI_SVM_HIGH_LEVEL = 0x12U,

    SYSCTL_enINTMASK_SYSNMI_ALL = 0x1FU,
    SYSCTL_enINTMASK_SYSNMI_MAX = 0x20U,
    SYSCTL_enINTMASK_SYSNMI_UNDEF = UNDEF_VALUE,
}SYSCTL_nINTMASK_SYSNMI;

typedef enum
{
    SYSCTL_enINT_USERNMI_NMI = 0U,
    SYSCTL_enINT_USERNMI_OSC = 1U,
    SYSCTL_enINT_USERNMI_FLASH_ACCESS = 2U,

    SYSCTL_enINT_USERNMI_MAX = 3U,
    SYSCTL_enINT_USERNMI_UNDEF = UNDEF_VALUE,
}SYSCTL_nINT_USERNMI;

typedef enum
{
    SYSCTL_enINTMASK_USERNMI_NMI = 0x2U,
    SYSCTL_enINTMASK_USERNMI_OSC = 0x4U,
    SYSCTL_enINTMASK_USERNMI_FLASH_ACCESS = 0x6U,

    SYSCTL_enINTMASK_USERNMI_ALL = 0x7U,
    SYSCTL_enINTMASK_USERNMI_MAX = 0x8U,
    SYSCTL_enINTMASK_USERNMI_UNDEF = UNDEF_VALUE,
}SYSCTL_nINTMASK_USERNMI;



typedef MCU_Register_t SYSCTL_Register_t;
typedef MCU_pvfIRQVectorHandler_t SYSCTL_pvfIRQVectorHandler_t;
typedef MCU_puxfIRQSourceHandler_t SYSCTL_puxfIRQSourceHandler_t;


#endif /* XDRIVER_MCU_SYSCTL_PERIPHERAL_HEADER_SYSCTL_ENUM_H_ */
